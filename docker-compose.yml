version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-api-prod
    restart: always
    ports:
      - "3002:3000"  # Changed from 3000:3000 to avoid conflicts
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/todo_db?schema=public
      - JWT_SECRET=18aacb75f408e76316a0a8333b761f190e22a12aa16815cbc66515d53f28c298
      - JWT_ACCESS_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=7d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - todo-network-prod  # Changed network name
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  postgres:
    image: postgres:14-alpine
    container_name: todo-postgres-prod
    restart: always
    ports:
      - "5435:5432"  # Changed from 5433:5432 to avoid conflicts
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todo_db
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data  # Changed volume name
    networks:
      - todo-network-prod  # Changed network name
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  redis:
    image: redis:alpine
    container_name: todo-redis-prod
    restart: always
    ports:
      - "6380:6379"  # Changed from 6379:6379 to avoid conflicts
    volumes:
      - redis_data_prod:/data  # Changed volume name
    networks:
      - todo-network-prod  # Changed network name
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M

networks:
  todo-network-prod:  # Changed network name
    driver: bridge

volumes:
  postgres_data_prod:  # Changed volume name
  redis_data_prod:  # Changed volume name